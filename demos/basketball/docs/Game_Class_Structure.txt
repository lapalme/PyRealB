Games:
    - __init__(split)
    - __getitem__(item) -> Game | None
    - __len__() -> int
    - __iter__ -> Iterator[Game]
    - keys() -> [str]

Game:
    date() -> Date
    game_id() -> int
    city() -> str
    stadium()-> str
    home() -> Team
    visitors() -> Team
    summaries() -> [str]  # returns the untokenized references
    show_title() -> str
    show_summaries() -> str

Team:
    period_scores: dict[str,Score]
    players : [Player]
    __init__(obj)
    - show() -> str
    - name() -> str
    - place() -> str
    - wins() -> int
    - losses() -> int
    - conference_standing() -> int
    - previous_game() -> int
    - next_game() -> int
    - player_names() -> [str]
    - get_player(name:str) -> Player
    - players_sorted() -> [Player] # sorted decreasing by points
    - show_name() -> str
    - get_points(key=None) -> {str:int} | int
    - final_score() -> int
    - minutes_overtime () -> int

Player (Score):
   this_game : Game
   team_name : str
   scores: Score
    - __init__(obj)
    - show() -> str
    - name() -> str
    - starter() -> bool
    - minutes() -> int
    - double() -> str   # "none" if no special double
    class method
    player_top_line() -> str

Score:
    - __init__(obj)
    - show() -> str
    - minutes -> int
    - goals() -> int
    - goals_attempted() ->  int
    - goals3() -> int
    - goals3_attempted() -> int
    - free_throws() -> int
    - free_throws_attempted() -> int
    - offensive_rebounds() -> int
    - rebounds() -> int
    - assists() -> int
    - steals() -> int
    - blocks() -> int
    - turnovers() -> int
    - fouls() -> int
    - plus_minus() -> int
    - points() -> int
    - allScores() -> {str:int}
    Class method and vars
    score_top_line() -> str
    score_titles : [str]
    score_width: int
---
Structure of "-aggregate.json"

field_name : "MIN"|"FGM"|"FGA"|"FG3M"|"FG3A"|"FTM"|"FTA"|"OREB"|"TREB"|"AST"|"STL"|"BLK"|"TOV"|"PF"|"PTS"|"+/-"

stat_elem: [float,[float,float,float]]
            mean followed by quartiles boundaries
{
  "teams"  :{name:str,{field_name:stat_elem}},
  "players":{name:str,{field_name:stat_elem}}
}

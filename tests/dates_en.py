from pyrealb import *
from test import test

from datetime import datetime,timedelta

def dates_en():
    loadEn()
    theDate="2015-01-01T11:25:45"
    date=datetime.strptime(theDate,"%Y-%m-%dT%H:%M:%S")
    exp=DT(theDate)
    rtimeOption = {"rtime":date,"hour":False,"minute":False,"second":False}
    return [    # natural date
            {},
    {"expression":exp,
     "expected":"on Thursday, January 1, 2015 at 11:25:45 a.m.", 
     "message":"Full info"},
    {"expression":DT(theDate).dOpt({"day":False, "date":True}),
     "expected":"on January 1, 2015 at 11:25:45 a.m.", 
     "message":"Without week day"},
    {"expression":DT(theDate).dOpt({"day":False, "month":False, "year":False}),
     "expected":"on the 1 at 11:25:45 a.m.", 
     "message":"Without day, month and year"},
    {"expression":DT(theDate).dOpt({"year":False}),
     "expected":"on Thursday, January 1 at 11:25:45 a.m.", 
     "message":"Without year"},
    {"expression":DT(theDate).dOpt({"year":False, "month":False, "date":False, "day":False}),
     "expected":"at 11:25:45 a.m.", 
     "message":"Only time"},
    {"expression":DT(theDate).dOpt({"year":False, "month":False, "date":False, "day":False, "minute":False, "second":False}),
     "expected":"at 11 a.m.", 
     "message":"Only hour"},
    {"expression":DT(theDate).dOpt({"year":False, "month":False, "date":False, "day":False, "second":False}),
     "expected":"at 11:25 a.m.", 
     "message":"Only hour and minute"},
    {"expression":DT(theDate).dOpt({"month":False, "date":False, "day":False, "hour":False, "minute":False, "second":False}),
     "expected":"in 2015", 
     "message":"Only year"},
    {"expression":DT(theDate).dOpt({"date":False, "day":False, "hour":False, "minute":False, "second":False}),
     "expected":"on January 2015", 
     "message":"Only month and year"},
    {"expression":DT(theDate).dOpt({"year":False, "month":False, "date":False, "hour":False, "minute":False, "second":False}),
     "expected":"on Thursday", 
     "message":"Only weekday"},
    {"expression":DT("2015-01-04T11:00:00").dOpt({"minute":False,"second":False}),
     "expected":"on Sunday, January 4, 2015 at 11 a.m.", 
     "message":"Full info without 0 minutes and 0 seconds"},
    # date in digit
    {"expression":DT(theDate).nat(False),
     "expected":"Thursday 1/1/2015 11:25:45 a.m.", 
     "message":"Full info"},
    {"expression":DT(theDate).dOpt({"day":False, "date":True}).nat(False),
     "expected":"1/1/2015 11:25:45 a.m.", 
     "message":"Without week day"},
    {"expression":DT(theDate).dOpt({"day":False, "month":False, "year":False}).nat(False),
     "expected":"1 11:25:45 a.m.", 
     "message":"Without day, month and year"},
    {"expression":DT(theDate).dOpt({"year":False}).nat(False),
     "expected":"Thursday 1/1 11:25:45 a.m.", 
     "message":"Without year"},
    {"expression":DT(theDate).dOpt({"year":False, "month":False, "date":False, "day":False}).nat(False),
     "expected":"11:25:45 a.m.", 
     "message":"Only time"},
    {"expression":DT(theDate).dOpt({"year":False, "month":False, "date":False, "day":False, "minute":False, "second":False}).nat(False),
     "expected":"11 a.m.", 
     "message":"Only hour"},
    {"expression":DT(theDate).dOpt({"year":False, "month":False, "date":False, "day":False, "second":False}).nat(False),
     "expected":"11:25 a.m.", 
     "message":"Only hour and minute"},
    {"expression":DT(theDate).dOpt({"month":False, "date":False, "day":False, "hour":False, "minute":False, "second":False}).nat(False),
     "expected":"2015", 
     "message":"Only year"},
    {"expression":DT(theDate).dOpt({"date":False, "day":False, "hour":False, "minute":False, "second":False}).nat(False),
     "expected":"1/2015", 
     "message":"Only month and year"},
    {"expression":DT(theDate).dOpt({"year":False, "month":False, "day":False, "hour":False, "minute":False, "second":False}).nat(False),
     "expected":"1", 
     "message":"Only date"},
    #relative time to Thursday January 1st 2015
    {"expression":DT(date-timedelta(days=1)).dOpt(rtimeOption),
     "expected":"yesterday",
     "message":"one day before"},
    {"expression":DT(date-timedelta(days=2)).dOpt(rtimeOption),
     "expected":"last Tuesday",
     "message":"two days before"},
    {"expression":DT(date-timedelta(days=10)).dOpt(rtimeOption),
     "expected":"10 days ago",
     "message":"since 10 days"},
    {"expression":DT(date).dOpt(rtimeOption),
     "expected":"today",
     "message":"same day"},
    {"expression":DT(date+timedelta(days=1)).dOpt(rtimeOption),
     "expected":"tomorrow",
     "message":"one day after"},
    {"expression":DT(date+timedelta(days=4)).dOpt(rtimeOption),
     "expected":"Monday",
     "message":"four days after"},
    {"expression":DT(date+timedelta(days=10)).dOpt(rtimeOption),
     "expected":"in 10 days",
     "message":"10 days after"},
    ]

if __name__ == '__main__':
    test("English dates","en",dates_en)
